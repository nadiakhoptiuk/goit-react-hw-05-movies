{"version":3,"file":"static/js/casts.8a81d541.chunk.js","mappings":"0NACA,EAA+B,2BAA/B,EAAkE,oBAAlE,EAAkG,wBAAlG,EAAsI,wB,SCCvH,SAASA,EAAT,GAAyC,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,UAAWC,EAAO,EAAPA,IAG9C,OACE,gCACGA,GACC,gBAAKC,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXF,IAAG,UARQ,8BAQR,gBAAyBA,GAC5BG,IAAKL,MAGP,MACJ,cAAGG,UAAWC,EAAd,SAA4BJ,KAC5B,eAAGG,UAAWC,EAAd,wBAAuCH,QChB7C,MAA2B,wBCKZ,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GAASI,MAAK,SAAAC,GAAQ,IAAD,EACJ,KAArB,UAAAA,EAAIC,YAAJ,eAAUC,QAIdR,EAASM,EAAIC,MAHXP,EAAS,WAKZ,CAACC,KAGF,wBACa,OAAVF,EAAA,OACCA,QADD,IACCA,OADD,EACCA,EAAOU,KAAI,YAAqD,IAAlDlB,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWkB,EAAgC,EAAhCA,aAAkBC,EAAc,EAAlBC,GAC3C,OACE,eAAkBlB,UAAWC,EAA7B,UACE,SAACL,EAAD,CAAMC,KAAMA,EAAMC,UAAWA,EAAWC,IAAKiB,KADtCC,OAMb,0D,mLC/BKE,EAAU,mCACVC,EAAW,gCAEjB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,GAAD,OAAIF,EAAJ,oCAAwCD,IAAWR,MACnE,SAAAC,GAAG,OAAIA,EAAIW,UAFR,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,iFACQH,MAAM,GAAD,OACbF,EADa,gCACmBD,EADnB,kBACoCM,EADpC,yBAEhBd,MAAK,SAAAC,GAAG,OAAIA,EAAIW,UAHb,0GAMA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,iFACQL,MAAM,GAAD,OAAIF,EAAJ,iBAAqBO,EAArB,oBAAwCR,IAAWR,MACnE,SAAAC,GACE,OAAKA,EAAIgB,GAKFhB,EAAIW,QAJTM,MAAM,2BACC,SALR,0GAyBA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBiB,GAAzB,iFACQL,MAAM,GAAD,OACbF,EADa,iBACIO,EADJ,4BAC+BR,IAC/CR,MAAK,SAAAC,GAAG,OAAIA,EAAIW,UAHb,0GAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,iFACQL,MAAM,GAAD,OACbF,EADa,iBACIO,EADJ,4BAC+BR,IAC/CR,MAAK,SAAAC,GAAG,OAAIA,EAAIW,UAHb","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Casts/Casts.module.css?6903","components/Casts/Casts.js","service/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photoWrapper\":\"Cast_photoWrapper__Khgjd\",\"photo\":\"Cast_photo__lvFLf\",\"actorName\":\"Cast_actorName__XabVA\",\"character\":\"Cast_character__tKDlA\"};","import s from './Cast.module.css';\n\nexport default function Cast({ name, character, src }) {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/';\n\n  return (\n    <>\n      {src ? (\n        <div className={s.photoWrapper}>\n          <img\n            className={s.photo}\n            src={`${BASE_IMG_URL}w342/${src}`}\n            alt={name}\n          />\n        </div>\n      ) : null}\n      <p className={s.actorName}>{name}</p>\n      <p className={s.character}>Character: {character}</p>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"Casts_castItem__9KxSc\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'service/service';\nimport Cast from 'components/Cast/Cast';\nimport s from './Casts.module.css';\n\nexport default function Casts() {\n  const [casts, setCasts] = useState([]);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieID).then(res => {\n      if (res.cast?.length === 0) {\n        setCasts(null);\n        return;\n      }\n      setCasts(res.cast);\n    });\n  }, [movieID]);\n\n  return (\n    <ul>\n      {casts !== null ? (\n        casts?.map(({ name, character, profile_path, id: actorId }) => {\n          return (\n            <li key={actorId} className={s.castItem}>\n              <Cast name={name} character={character} src={profile_path} />\n            </li>\n          );\n        })\n      ) : (\n        <p>No information about casts</p>\n      )}\n    </ul>\n  );\n}\n","export const API_KEY = '5e1fcd47f20766d1df18c73f06c8901a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  return await fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n}\n\nexport async function fetchMoviesByKeyword(query) {\n  return await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  ).then(res => res.json());\n}\n\nexport async function fetchMovieById(movieId) {\n  return await fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) {\n        alert('No detailed information');\n        return null;\n      }\n\n      return res.json();\n    }\n  );\n}\n\n// export async function fetchGetGenresList(array) {\n//   return await fetch(`${BASE_URL}genre/movie/list?api_key=${API_KEY}`)\n//     .then(res => res.json())\n//     .then(res => {\n//       const arrOfGenres = array.map(({ id }) => {\n//         return res.find(obj => obj.id === id); // TODO\n//       });\n//       console.log(arrOfGenres);\n//       return arrOfGenres?.map(obj => obj.name).join(' ');\n//     });\n// }\n\nexport async function fetchCast(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(res => res.json());\n}\n\nexport async function fetchReviews(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(res => res.json());\n}\n"],"names":["Cast","name","character","src","className","s","alt","Casts","useState","casts","setCasts","movieID","useParams","useEffect","fetchCast","then","res","cast","length","map","profile_path","actorId","id","API_KEY","BASE_URL","fetchTrendingMovies","fetch","json","fetchMoviesByKeyword","query","fetchMovieById","movieId","ok","alert","fetchReviews"],"sourceRoot":""}