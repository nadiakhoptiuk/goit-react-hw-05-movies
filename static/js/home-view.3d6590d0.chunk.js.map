{"version":3,"file":"static/js/home-view.3d6590d0.chunk.js","mappings":"+OAKe,SAASA,IACtB,OAAkDC,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAAG,OAAIJ,EAAqBI,EAAIC,cAC1D,KAGD,SAACC,EAAA,EAAD,CAASC,MAAM,iBAAf,UACE,SAACC,EAAA,QAAD,CAAWC,YAAaV,Q,+DCb9B,EAA4B,6B,SCEb,SAASW,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,gBAAKC,UAAWC,EAAhB,SAA8BF,M,uFCHvC,EAA4B,6BAA5B,EAAqE,6B,SCGtD,SAASH,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,YAC5BK,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIH,UAAWC,EAAf,gBACGJ,QADH,IACGA,OADH,EACGA,EAAaO,KAAI,SAAAC,GAChB,OACE,eAAuBL,UAAWC,EAAlC,UACE,SAAC,KAAD,CAAMK,GAAE,kBAAaD,EAAUE,IAAMC,MAAO,CAAEC,KAAMP,GAApD,SACGG,EAAUV,OAASU,EAAUK,QAFzBL,EAAUE,W,wECV7B,EAA0B,yBAA1B,EAA2D,uBAA3D,EAA2F,wB,SCI5E,SAASb,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,SACvC,OACE,oBAASC,UAAWC,EAApB,UACE,UAACH,EAAA,EAAD,YACE,eAAIE,UAAWL,EAAQM,EAAUA,EAAjC,SAA4CN,IAC3CI,S,mLCVIY,EAAU,mCACVC,EAAW,gCAEjB,SAAetB,IAAtB,4CAAO,OAAP,oBAAO,8FACQuB,MAAM,GAAD,OAAID,EAAJ,oCAAwCD,IAAWpB,MACnE,SAAAC,GAAG,OAAIA,EAAIsB,UAFR,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,iFACQH,MAAM,GAAD,OACbD,EADa,gCACmBD,EADnB,kBACoCK,EADpC,yBAEhBzB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,UAHb,0GAMA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,iFACQL,MAAM,GAAD,OAAID,EAAJ,iBAAqBM,EAArB,oBAAwCP,IAAWpB,MACnE,SAAAC,GACE,OAAKA,EAAI2B,GAKF3B,EAAIsB,QAJTM,MAAM,2BACC,SALR,0GAyBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,iFACQL,MAAM,GAAD,OACbD,EADa,iBACIM,EADJ,4BAC+BP,IAC/CpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,UAHb,0GAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,iFACQL,MAAM,GAAD,OACbD,EADa,iBACIM,EADJ,4BAC+BP,IAC/CpB,MAAK,SAAAC,GAAG,OAAIA,EAAIsB,UAHb","sources":["Views/HomeView/HomeView.js","webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","webpack://goit-react-hw-05-movies/./src/components/Section/Section.module.css?dbe8","components/Section/Section.js","service/service.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'service/service';\nimport Section from 'components/Section';\nimport MovieList from 'components/MovieList';\n\nexport default function HomeView() {\n  const [trendingMovielist, setTrendingMovielist] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(res => setTrendingMovielist(res.results));\n  }, []);\n\n  return (\n    <Section title=\"Trending today\">\n      <MovieList moviesArray={trendingMovielist} />\n    </Section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import React from 'react';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieItem\":\"MovieList_movieItem__qe2ZM\"};","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport s from './MovieList.module.css';\n\nexport default function MovieList({ moviesArray }) {\n  const location = useLocation();\n\n  return (\n    <ul className={s.movieList}>\n      {moviesArray?.map(movieItem => {\n        return (\n          <li key={movieItem.id} className={s.movieItem}>\n            <Link to={`/movies/${movieItem.id}`} state={{ from: location }}>\n              {movieItem.title || movieItem.name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\",\"hidden\":\"Section_hidden__x1r60\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from '../Container';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <Container>\n        <h1 className={title ? s.title : s.hidden}>{title}</h1>\n        {children}\n      </Container>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","export const API_KEY = '5e1fcd47f20766d1df18c73f06c8901a';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies() {\n  return await fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`).then(\n    res => res.json()\n  );\n}\n\nexport async function fetchMoviesByKeyword(query) {\n  return await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  ).then(res => res.json());\n}\n\nexport async function fetchMovieById(movieId) {\n  return await fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    res => {\n      if (!res.ok) {\n        alert('No detailed information');\n        return null;\n      }\n\n      return res.json();\n    }\n  );\n}\n\n// export async function fetchGetGenresList(array) {\n//   return await fetch(`${BASE_URL}genre/movie/list?api_key=${API_KEY}`)\n//     .then(res => res.json())\n//     .then(res => {\n//       const arrOfGenres = array.map(({ id }) => {\n//         return res.find(obj => obj.id === id); // TODO\n//       });\n//       console.log(arrOfGenres);\n//       return arrOfGenres?.map(obj => obj.name).join(' ');\n//     });\n// }\n\nexport async function fetchCast(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  ).then(res => res.json());\n}\n\nexport async function fetchReviews(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  ).then(res => res.json());\n}\n"],"names":["HomeView","useState","trendingMovielist","setTrendingMovielist","useEffect","fetchTrendingMovies","then","res","results","Section","title","MovieList","moviesArray","Container","children","className","s","location","useLocation","map","movieItem","to","id","state","from","name","API_KEY","BASE_URL","fetch","json","fetchMoviesByKeyword","query","fetchMovieById","movieId","ok","alert","fetchCast","fetchReviews"],"sourceRoot":""}